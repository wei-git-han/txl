buildscript {
	ext {
		springBootVersion = '1.3.6.RELEASE'
		springCloudVersion = 'Brixton.SR3'
	}
	repositories {
		maven { url 'file://' + new File('csse/_localmaven').absolutePath }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
	
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'


description = ""

sourceCompatibility = 1.8
targetCompatibility = 1.8
	
processResources {
    from('src/main/java') {
     include '**/*'
     exclude '**/*.java'
    }
    exclude '**/application*.yml'
 }

task resourcesFilesCopy(type: Copy) {
	copy {
		from("src/main/java") {
			include ("**/*.xml")
			include ("**/*.xls")
		}
		into("out/production/classes")
	}
	copy {
		from("src/main/resources") {
			include ("**/application*.yml")
		}
		into("out/production/resources")
	}
	print "Copy xml,xls,yml to outDir\n"
}
configurations{
	provided
}

bootRun {
    addResources = true
}
	
	repositories {
	      maven { url 'file://' + new File('csse/_localmaven').absolutePath }
	}
	
	dependencies {
	    //compile fileTree(dir:'lib/',exclude: ['tomcat-embed*.jar'],include:['*.jar'])
	    compile fileTree(dir:'tomcat_lib/',exclude: ['tomcat-embed*.jar'],include:['*.jar'])
	    //标准办公应用jar包
	    compile fileTree(dir:'csse/bgpt',include:['*.jar'])
	    //compile("org.springframework.boot:spring-boot-legacy")
		//单点
		//compile fileTree(dir:'lib/sso',include:['*.jar'])
		//springcache redis 依赖
		compile("org.springframework.boot:spring-boot-starter-cache")
		compile("org.springframework.boot:spring-boot-starter-redis")
	        compile("org.springframework.boot:spring-boot-starter-tomcat")
	     
	   compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	   compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
	   compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
	   compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
	   compile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
			exclude(module: 'commons-logging')
	    }
	    
	    //apache工具类
	   compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	   compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	   compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
	   compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	   compile group: 'commons-digester', name: 'commons-digester', version: '2.0'
	    
	    //当前代码生成器依赖来，将来会取消
	    compile('org.apache.velocity:velocity:1.7')
	    	//验证码依赖
        compile('com.github.axet:kaptcha:0.0.9')
    
	    //权限验证组件
		compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.3.2'
		compile group: 'org.apache.shiro', name: 'shiro-spring', version: '1.3.2'
		compile group: 'org.apache.shiro', name: 'shiro-web', version: '1.3.2'
	   	
	    //数据库连接池依赖
	   compile group: 'com.alibaba', name: 'druid', version:'1.0.29'
       compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
	    
	    //json工具依赖
	    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.28'
	    //达梦数据库驱动
	    compile group: 'dmdb', name: 'jdbc', version:'7'
	    
	    
	    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version:'1.1.1'
	    compile (group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version:'1.1.0'){
	    	exclude group: 'org.mybatis.spring.boot', module: 'mybatis-spring-boot-starter'
	    }
	    
	    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
	    
	  	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	    compile (group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2'){
	     	exclude group: 'org.springframework.cloud', module: 'spring-cloud-security'
 			exclude group: 'org.springframework.security', module: 'spring-security-config'
	    }
	}

configurations {
 
 	//compile.exclude group: 'org.springframework.security', module: 'spring-security-core'
}
dependencyManagement {
     imports {
          mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
     }
}